"use strict";
module.exports = () => {
    const messageEventHandler = require('./messageEventHandler');
    const followEventHandler = require('./followEventHandler');
    const unfollowEventHandler = require('./unfollowEventHandler');
    const postbackEventHandler = require('./postbackEventHandler');
    const beaconEventHandler = require('./beaconEventHandler');
    const defaultEventHandler = require('./defaultEventHandler');
    const eventHandlers = {
        [messageEventHandler.eventType]: messageEventHandler.handler(),
        [followEventHandler.eventType]: followEventHandler.handler(),
        [unfollowEventHandler.eventType]: unfollowEventHandler.handler(),
        [postbackEventHandler.eventType]: postbackEventHandler.handler(),
        [beaconEventHandler.eventType]: beaconEventHandler.handler()
    };
    const isSystemVerificationEvent = ({ replyToken }) => {
        return replyToken === '00000000000000000000000000000000' ||
            replyToken === 'ffffffffffffffffffffffffffffffff';
    };
    const getUserId = (source) => {
        return source && source.userId
            ? source.userId
            : `???????`;
    };
    return (event) => {
        if (isSystemVerificationEvent(event))
            return;
        const eventHandler = eventHandlers[event.type] || defaultEventHandler.handler();
        return Object.assign({}, { userId: getUserId(event.source) }, eventHandler(event));
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY2hhdGJvdHMvd2ViaG9vay9saW5lL2V2ZW50SGFuZGxlcnMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLGlCQUFTLEdBQUcsRUFBRTtJQUNaLE1BQU0sbUJBQW1CLEdBQUcsT0FBTyxDQUFDLHVCQUF1QixDQUFDLENBQUE7SUFDNUQsTUFBTSxrQkFBa0IsR0FBRyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQTtJQUMxRCxNQUFNLG9CQUFvQixHQUFHLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFBO0lBQzlELE1BQU0sb0JBQW9CLEdBQUcsT0FBTyxDQUFDLHdCQUF3QixDQUFDLENBQUE7SUFDOUQsTUFBTSxrQkFBa0IsR0FBRyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQTtJQUMxRCxNQUFNLG1CQUFtQixHQUFHLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQyxDQUFBO0lBRTVELE1BQU0sYUFBYSxHQUFHO1FBQ3BCLENBQUMsbUJBQW1CLENBQUMsU0FBUyxDQUFDLEVBQUUsbUJBQW1CLENBQUMsT0FBTyxFQUFFO1FBQzlELENBQUMsa0JBQWtCLENBQUMsU0FBUyxDQUFDLEVBQUUsa0JBQWtCLENBQUMsT0FBTyxFQUFFO1FBQzVELENBQUMsb0JBQW9CLENBQUMsU0FBUyxDQUFDLEVBQUUsb0JBQW9CLENBQUMsT0FBTyxFQUFFO1FBQ2hFLENBQUMsb0JBQW9CLENBQUMsU0FBUyxDQUFDLEVBQUUsb0JBQW9CLENBQUMsT0FBTyxFQUFFO1FBQ2hFLENBQUMsa0JBQWtCLENBQUMsU0FBUyxDQUFDLEVBQUUsa0JBQWtCLENBQUMsT0FBTyxFQUFFO0tBQzdELENBQUE7SUFFRCxNQUFNLHlCQUF5QixHQUFHLENBQUMsRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFO1FBQ25ELE9BQU8sVUFBVSxLQUFLLGtDQUFrQztZQUN0RCxVQUFVLEtBQUssa0NBQWtDLENBQUE7SUFDckQsQ0FBQyxDQUFBO0lBRUQsTUFBTSxTQUFTLEdBQUcsQ0FBQyxNQUFNLEVBQUUsRUFBRTtRQUMzQixPQUFPLE1BQU0sSUFBSSxNQUFNLENBQUMsTUFBTTtZQUM1QixDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU07WUFDZixDQUFDLENBQUMsU0FBUyxDQUFBO0lBQ2YsQ0FBQyxDQUFBO0lBRUQsT0FBTyxDQUFDLEtBQUssRUFBRSxFQUFFO1FBQ2YsSUFBSSx5QkFBeUIsQ0FBQyxLQUFLLENBQUM7WUFBRSxPQUFNO1FBQzVDLE1BQU0sWUFBWSxHQUFHLGFBQWEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksbUJBQW1CLENBQUMsT0FBTyxFQUFFLENBQUE7UUFDL0UsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxTQUFTLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUE7SUFDcEYsQ0FBQyxDQUFBO0FBQ0gsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ID0gKCkgPT4ge1xuICBjb25zdCBtZXNzYWdlRXZlbnRIYW5kbGVyID0gcmVxdWlyZSgnLi9tZXNzYWdlRXZlbnRIYW5kbGVyJylcbiAgY29uc3QgZm9sbG93RXZlbnRIYW5kbGVyID0gcmVxdWlyZSgnLi9mb2xsb3dFdmVudEhhbmRsZXInKVxuICBjb25zdCB1bmZvbGxvd0V2ZW50SGFuZGxlciA9IHJlcXVpcmUoJy4vdW5mb2xsb3dFdmVudEhhbmRsZXInKVxuICBjb25zdCBwb3N0YmFja0V2ZW50SGFuZGxlciA9IHJlcXVpcmUoJy4vcG9zdGJhY2tFdmVudEhhbmRsZXInKVxuICBjb25zdCBiZWFjb25FdmVudEhhbmRsZXIgPSByZXF1aXJlKCcuL2JlYWNvbkV2ZW50SGFuZGxlcicpXG4gIGNvbnN0IGRlZmF1bHRFdmVudEhhbmRsZXIgPSByZXF1aXJlKCcuL2RlZmF1bHRFdmVudEhhbmRsZXInKVxuXG4gIGNvbnN0IGV2ZW50SGFuZGxlcnMgPSB7XG4gICAgW21lc3NhZ2VFdmVudEhhbmRsZXIuZXZlbnRUeXBlXTogbWVzc2FnZUV2ZW50SGFuZGxlci5oYW5kbGVyKCksXG4gICAgW2ZvbGxvd0V2ZW50SGFuZGxlci5ldmVudFR5cGVdOiBmb2xsb3dFdmVudEhhbmRsZXIuaGFuZGxlcigpLFxuICAgIFt1bmZvbGxvd0V2ZW50SGFuZGxlci5ldmVudFR5cGVdOiB1bmZvbGxvd0V2ZW50SGFuZGxlci5oYW5kbGVyKCksXG4gICAgW3Bvc3RiYWNrRXZlbnRIYW5kbGVyLmV2ZW50VHlwZV06IHBvc3RiYWNrRXZlbnRIYW5kbGVyLmhhbmRsZXIoKSxcbiAgICBbYmVhY29uRXZlbnRIYW5kbGVyLmV2ZW50VHlwZV06IGJlYWNvbkV2ZW50SGFuZGxlci5oYW5kbGVyKClcbiAgfVxuXG4gIGNvbnN0IGlzU3lzdGVtVmVyaWZpY2F0aW9uRXZlbnQgPSAoeyByZXBseVRva2VuIH0pID0+IHtcbiAgICByZXR1cm4gcmVwbHlUb2tlbiA9PT0gJzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJyB8fFxuICAgICAgcmVwbHlUb2tlbiA9PT0gJ2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmJ1xuICB9XG5cbiAgY29uc3QgZ2V0VXNlcklkID0gKHNvdXJjZSkgPT4ge1xuICAgIHJldHVybiBzb3VyY2UgJiYgc291cmNlLnVzZXJJZFxuICAgICAgPyBzb3VyY2UudXNlcklkXG4gICAgICA6IGA/Pz8/Pz8/YFxuICB9XG5cbiAgcmV0dXJuIChldmVudCkgPT4ge1xuICAgIGlmIChpc1N5c3RlbVZlcmlmaWNhdGlvbkV2ZW50KGV2ZW50KSkgcmV0dXJuXG4gICAgY29uc3QgZXZlbnRIYW5kbGVyID0gZXZlbnRIYW5kbGVyc1tldmVudC50eXBlXSB8fCBkZWZhdWx0RXZlbnRIYW5kbGVyLmhhbmRsZXIoKVxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCB7IHVzZXJJZDogZ2V0VXNlcklkKGV2ZW50LnNvdXJjZSkgfSwgZXZlbnRIYW5kbGVyKGV2ZW50KSlcbiAgfVxufSJdfQ==