"use strict";
module.exports = () => {
    const messageEventHandler = require('./messageEventHandler');
    const followEventHandler = require('./followEventHandler');
    const unfollowEventHandler = require('./unfollowEventHandler');
    const postbackEventHandler = require('./postbackEventHandler');
    const beaconEventHandler = require('./beaconEventHandler');
    const defaultEventHandler = require('./defaultEventHandler');
    const eventHandlers = {
        [messageEventHandler.eventType]: messageEventHandler.handler(),
        [followEventHandler.eventType]: followEventHandler.handler(),
        [unfollowEventHandler.eventType]: unfollowEventHandler.handler(),
        [postbackEventHandler.eventType]: postbackEventHandler.handler(),
        [beaconEventHandler.eventType]: beaconEventHandler.handler()
    };
    const isSystemVerificationEvent = ({ replyToken }) => {
        return replyToken === '00000000000000000000000000000000' ||
            replyToken === 'ffffffffffffffffffffffffffffffff';
    };
    const getSource = (source) => {
        return source || { userId: '????' };
    };
    return (event) => {
        console.log('XXXX', JSON.stringify(event));
        if (isSystemVerificationEvent(event))
            return;
        const eventHandler = eventHandlers[event.type] || defaultEventHandler.handler();
        return Object.assign({}, getSource(event.source), eventHandler(event));
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY2hhdGJvdHMvd2ViaG9vay9saW5lL2V2ZW50SGFuZGxlcnMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLGlCQUFTLEdBQUcsRUFBRTtJQUNaLE1BQU0sbUJBQW1CLEdBQUcsT0FBTyxDQUFDLHVCQUF1QixDQUFDLENBQUE7SUFDNUQsTUFBTSxrQkFBa0IsR0FBRyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQTtJQUMxRCxNQUFNLG9CQUFvQixHQUFHLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFBO0lBQzlELE1BQU0sb0JBQW9CLEdBQUcsT0FBTyxDQUFDLHdCQUF3QixDQUFDLENBQUE7SUFDOUQsTUFBTSxrQkFBa0IsR0FBRyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQTtJQUMxRCxNQUFNLG1CQUFtQixHQUFHLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQyxDQUFBO0lBRTVELE1BQU0sYUFBYSxHQUFHO1FBQ3BCLENBQUMsbUJBQW1CLENBQUMsU0FBUyxDQUFDLEVBQUUsbUJBQW1CLENBQUMsT0FBTyxFQUFFO1FBQzlELENBQUMsa0JBQWtCLENBQUMsU0FBUyxDQUFDLEVBQUUsa0JBQWtCLENBQUMsT0FBTyxFQUFFO1FBQzVELENBQUMsb0JBQW9CLENBQUMsU0FBUyxDQUFDLEVBQUUsb0JBQW9CLENBQUMsT0FBTyxFQUFFO1FBQ2hFLENBQUMsb0JBQW9CLENBQUMsU0FBUyxDQUFDLEVBQUUsb0JBQW9CLENBQUMsT0FBTyxFQUFFO1FBQ2hFLENBQUMsa0JBQWtCLENBQUMsU0FBUyxDQUFDLEVBQUUsa0JBQWtCLENBQUMsT0FBTyxFQUFFO0tBQzdELENBQUE7SUFFRCxNQUFNLHlCQUF5QixHQUFHLENBQUMsRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFO1FBQ25ELE9BQU8sVUFBVSxLQUFLLGtDQUFrQztZQUN0RCxVQUFVLEtBQUssa0NBQWtDLENBQUE7SUFDckQsQ0FBQyxDQUFBO0lBRUQsTUFBTSxTQUFTLEdBQUcsQ0FBQyxNQUFNLEVBQUUsRUFBRTtRQUMzQixPQUFPLE1BQU0sSUFBSSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsQ0FBQTtJQUNyQyxDQUFDLENBQUE7SUFFRCxPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUE7UUFDMUMsSUFBSSx5QkFBeUIsQ0FBQyxLQUFLLENBQUM7WUFBRSxPQUFNO1FBQzVDLE1BQU0sWUFBWSxHQUFHLGFBQWEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksbUJBQW1CLENBQUMsT0FBTyxFQUFFLENBQUE7UUFDL0UsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxTQUFTLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFFLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFBO0lBQ3hFLENBQUMsQ0FBQTtBQUNILENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCA9ICgpID0+IHtcbiAgY29uc3QgbWVzc2FnZUV2ZW50SGFuZGxlciA9IHJlcXVpcmUoJy4vbWVzc2FnZUV2ZW50SGFuZGxlcicpXG4gIGNvbnN0IGZvbGxvd0V2ZW50SGFuZGxlciA9IHJlcXVpcmUoJy4vZm9sbG93RXZlbnRIYW5kbGVyJylcbiAgY29uc3QgdW5mb2xsb3dFdmVudEhhbmRsZXIgPSByZXF1aXJlKCcuL3VuZm9sbG93RXZlbnRIYW5kbGVyJylcbiAgY29uc3QgcG9zdGJhY2tFdmVudEhhbmRsZXIgPSByZXF1aXJlKCcuL3Bvc3RiYWNrRXZlbnRIYW5kbGVyJylcbiAgY29uc3QgYmVhY29uRXZlbnRIYW5kbGVyID0gcmVxdWlyZSgnLi9iZWFjb25FdmVudEhhbmRsZXInKVxuICBjb25zdCBkZWZhdWx0RXZlbnRIYW5kbGVyID0gcmVxdWlyZSgnLi9kZWZhdWx0RXZlbnRIYW5kbGVyJylcblxuICBjb25zdCBldmVudEhhbmRsZXJzID0ge1xuICAgIFttZXNzYWdlRXZlbnRIYW5kbGVyLmV2ZW50VHlwZV06IG1lc3NhZ2VFdmVudEhhbmRsZXIuaGFuZGxlcigpLFxuICAgIFtmb2xsb3dFdmVudEhhbmRsZXIuZXZlbnRUeXBlXTogZm9sbG93RXZlbnRIYW5kbGVyLmhhbmRsZXIoKSxcbiAgICBbdW5mb2xsb3dFdmVudEhhbmRsZXIuZXZlbnRUeXBlXTogdW5mb2xsb3dFdmVudEhhbmRsZXIuaGFuZGxlcigpLFxuICAgIFtwb3N0YmFja0V2ZW50SGFuZGxlci5ldmVudFR5cGVdOiBwb3N0YmFja0V2ZW50SGFuZGxlci5oYW5kbGVyKCksXG4gICAgW2JlYWNvbkV2ZW50SGFuZGxlci5ldmVudFR5cGVdOiBiZWFjb25FdmVudEhhbmRsZXIuaGFuZGxlcigpXG4gIH1cblxuICBjb25zdCBpc1N5c3RlbVZlcmlmaWNhdGlvbkV2ZW50ID0gKHsgcmVwbHlUb2tlbiB9KSA9PiB7XG4gICAgcmV0dXJuIHJlcGx5VG9rZW4gPT09ICcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCcgfHxcbiAgICAgIHJlcGx5VG9rZW4gPT09ICdmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZidcbiAgfVxuXG4gIGNvbnN0IGdldFNvdXJjZSA9IChzb3VyY2UpID0+IHtcbiAgICByZXR1cm4gc291cmNlIHx8IHsgdXNlcklkOiAnPz8/PycgfVxuICB9XG5cbiAgcmV0dXJuIChldmVudCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdYWFhYJywgSlNPTi5zdHJpbmdpZnkoZXZlbnQpKVxuICAgIGlmIChpc1N5c3RlbVZlcmlmaWNhdGlvbkV2ZW50KGV2ZW50KSkgcmV0dXJuXG4gICAgY29uc3QgZXZlbnRIYW5kbGVyID0gZXZlbnRIYW5kbGVyc1tldmVudC50eXBlXSB8fCBkZWZhdWx0RXZlbnRIYW5kbGVyLmhhbmRsZXIoKVxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBnZXRTb3VyY2UoZXZlbnQuc291cmNlKSwgZXZlbnRIYW5kbGVyKGV2ZW50KSlcbiAgfVxufSJdfQ==